// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.29.3
// source: dream11/oam/provideraccount/v1/provider_account.proto

package v1

import (
	v1 "github.com/dream11/odin/proto/gen/go/dream11/oam/dto/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetProviderAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers                   map[string]string `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Name                      string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	FetchLinkedAccountDetails bool              `protobuf:"varint,3,opt,name=fetch_linked_account_details,json=fetchLinkedAccountDetails,proto3" json:"fetch_linked_account_details,omitempty"`
}

func (x *GetProviderAccountRequest) Reset() {
	*x = GetProviderAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dream11_oam_provideraccount_v1_provider_account_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderAccountRequest) ProtoMessage() {}

func (x *GetProviderAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dream11_oam_provideraccount_v1_provider_account_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderAccountRequest.ProtoReflect.Descriptor instead.
func (*GetProviderAccountRequest) Descriptor() ([]byte, []int) {
	return file_dream11_oam_provideraccount_v1_provider_account_proto_rawDescGZIP(), []int{0}
}

func (x *GetProviderAccountRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *GetProviderAccountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetProviderAccountRequest) GetFetchLinkedAccountDetails() bool {
	if x != nil {
		return x.FetchLinkedAccountDetails
	}
	return false
}

type GetProviderAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account        *v1.ProviderAccount   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	LinkedAccounts []*v1.ProviderAccount `protobuf:"bytes,2,rep,name=linked_accounts,json=linkedAccounts,proto3" json:"linked_accounts,omitempty"`
}

func (x *GetProviderAccountResponse) Reset() {
	*x = GetProviderAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dream11_oam_provideraccount_v1_provider_account_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderAccountResponse) ProtoMessage() {}

func (x *GetProviderAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dream11_oam_provideraccount_v1_provider_account_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderAccountResponse.ProtoReflect.Descriptor instead.
func (*GetProviderAccountResponse) Descriptor() ([]byte, []int) {
	return file_dream11_oam_provideraccount_v1_provider_account_proto_rawDescGZIP(), []int{1}
}

func (x *GetProviderAccountResponse) GetAccount() *v1.ProviderAccount {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *GetProviderAccountResponse) GetLinkedAccounts() []*v1.ProviderAccount {
	if x != nil {
		return x.LinkedAccounts
	}
	return nil
}

type GetProviderAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers                   map[string]string `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Name                      []string          `protobuf:"bytes,2,rep,name=name,proto3" json:"name,omitempty"`
	FetchLinkedAccountDetails bool              `protobuf:"varint,3,opt,name=fetch_linked_account_details,json=fetchLinkedAccountDetails,proto3" json:"fetch_linked_account_details,omitempty"`
}

func (x *GetProviderAccountsRequest) Reset() {
	*x = GetProviderAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dream11_oam_provideraccount_v1_provider_account_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderAccountsRequest) ProtoMessage() {}

func (x *GetProviderAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dream11_oam_provideraccount_v1_provider_account_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderAccountsRequest.ProtoReflect.Descriptor instead.
func (*GetProviderAccountsRequest) Descriptor() ([]byte, []int) {
	return file_dream11_oam_provideraccount_v1_provider_account_proto_rawDescGZIP(), []int{2}
}

func (x *GetProviderAccountsRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *GetProviderAccountsRequest) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *GetProviderAccountsRequest) GetFetchLinkedAccountDetails() bool {
	if x != nil {
		return x.FetchLinkedAccountDetails
	}
	return false
}

type GetProviderAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []*GetProviderAccountResponse `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *GetProviderAccountsResponse) Reset() {
	*x = GetProviderAccountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dream11_oam_provideraccount_v1_provider_account_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderAccountsResponse) ProtoMessage() {}

func (x *GetProviderAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dream11_oam_provideraccount_v1_provider_account_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderAccountsResponse.ProtoReflect.Descriptor instead.
func (*GetProviderAccountsResponse) Descriptor() ([]byte, []int) {
	return file_dream11_oam_provideraccount_v1_provider_account_proto_rawDescGZIP(), []int{3}
}

func (x *GetProviderAccountsResponse) GetAccounts() []*GetProviderAccountResponse {
	if x != nil {
		return x.Accounts
	}
	return nil
}

var File_dream11_oam_provideraccount_v1_provider_account_proto protoreflect.FileDescriptor

var file_dream11_oam_provideraccount_v1_provider_account_proto_rawDesc = []byte{
	0x0a, 0x35, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x31, 0x31, 0x2f, 0x6f, 0x61, 0x6d, 0x2f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x31, 0x31,
	0x2e, 0x6f, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x29, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x31, 0x31,
	0x2f, 0x6f, 0x61, 0x6d, 0x2f, 0x64, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x8e, 0x02, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x60, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x46, 0x2e, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x31, 0x31, 0x2e, 0x6f, 0x61, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x1c, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x66, 0x65,
	0x74, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xa9, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x31, 0x31, 0x2e, 0x6f, 0x61,
	0x6d, 0x2e, 0x64, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x4c, 0x0a, 0x0f, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x72, 0x65,
	0x61, 0x6d, 0x31, 0x31, 0x2e, 0x6f, 0x61, 0x6d, 0x2e, 0x64, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x0e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22,
	0x90, 0x02, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x61,
	0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x47, 0x2e, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x31, 0x31, 0x2e, 0x6f, 0x61, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x1c, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x66, 0x65, 0x74,
	0x63, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x75, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x56, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x31, 0x31, 0x2e, 0x6f, 0x61,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x32, 0xbb, 0x02, 0x0a, 0x16, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x2e, 0x64, 0x72,
	0x65, 0x61, 0x6d, 0x31, 0x31, 0x2e, 0x6f, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x31, 0x31,
	0x2e, 0x6f, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x90, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x3a, 0x2e, 0x64,
	0x72, 0x65, 0x61, 0x6d, 0x31, 0x31, 0x2e, 0x6f, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x64, 0x72, 0x65, 0x61, 0x6d,
	0x31, 0x31, 0x2e, 0x6f, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x31, 0x31, 0x2f, 0x6f, 0x64,
	0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f,
	0x64, 0x72, 0x65, 0x61, 0x6d, 0x31, 0x31, 0x2f, 0x6f, 0x61, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dream11_oam_provideraccount_v1_provider_account_proto_rawDescOnce sync.Once
	file_dream11_oam_provideraccount_v1_provider_account_proto_rawDescData = file_dream11_oam_provideraccount_v1_provider_account_proto_rawDesc
)

func file_dream11_oam_provideraccount_v1_provider_account_proto_rawDescGZIP() []byte {
	file_dream11_oam_provideraccount_v1_provider_account_proto_rawDescOnce.Do(func() {
		file_dream11_oam_provideraccount_v1_provider_account_proto_rawDescData = protoimpl.X.CompressGZIP(file_dream11_oam_provideraccount_v1_provider_account_proto_rawDescData)
	})
	return file_dream11_oam_provideraccount_v1_provider_account_proto_rawDescData
}

var file_dream11_oam_provideraccount_v1_provider_account_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_dream11_oam_provideraccount_v1_provider_account_proto_goTypes = []interface{}{
	(*GetProviderAccountRequest)(nil),   // 0: dream11.oam.provideraccount.v1.GetProviderAccountRequest
	(*GetProviderAccountResponse)(nil),  // 1: dream11.oam.provideraccount.v1.GetProviderAccountResponse
	(*GetProviderAccountsRequest)(nil),  // 2: dream11.oam.provideraccount.v1.GetProviderAccountsRequest
	(*GetProviderAccountsResponse)(nil), // 3: dream11.oam.provideraccount.v1.GetProviderAccountsResponse
	nil,                                 // 4: dream11.oam.provideraccount.v1.GetProviderAccountRequest.HeadersEntry
	nil,                                 // 5: dream11.oam.provideraccount.v1.GetProviderAccountsRequest.HeadersEntry
	(*v1.ProviderAccount)(nil),          // 6: dream11.oam.dto.v1.ProviderAccount
}
var file_dream11_oam_provideraccount_v1_provider_account_proto_depIdxs = []int32{
	4, // 0: dream11.oam.provideraccount.v1.GetProviderAccountRequest.headers:type_name -> dream11.oam.provideraccount.v1.GetProviderAccountRequest.HeadersEntry
	6, // 1: dream11.oam.provideraccount.v1.GetProviderAccountResponse.account:type_name -> dream11.oam.dto.v1.ProviderAccount
	6, // 2: dream11.oam.provideraccount.v1.GetProviderAccountResponse.linked_accounts:type_name -> dream11.oam.dto.v1.ProviderAccount
	5, // 3: dream11.oam.provideraccount.v1.GetProviderAccountsRequest.headers:type_name -> dream11.oam.provideraccount.v1.GetProviderAccountsRequest.HeadersEntry
	1, // 4: dream11.oam.provideraccount.v1.GetProviderAccountsResponse.accounts:type_name -> dream11.oam.provideraccount.v1.GetProviderAccountResponse
	0, // 5: dream11.oam.provideraccount.v1.ProviderAccountService.GetProviderAccount:input_type -> dream11.oam.provideraccount.v1.GetProviderAccountRequest
	2, // 6: dream11.oam.provideraccount.v1.ProviderAccountService.GetProviderAccounts:input_type -> dream11.oam.provideraccount.v1.GetProviderAccountsRequest
	1, // 7: dream11.oam.provideraccount.v1.ProviderAccountService.GetProviderAccount:output_type -> dream11.oam.provideraccount.v1.GetProviderAccountResponse
	3, // 8: dream11.oam.provideraccount.v1.ProviderAccountService.GetProviderAccounts:output_type -> dream11.oam.provideraccount.v1.GetProviderAccountsResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_dream11_oam_provideraccount_v1_provider_account_proto_init() }
func file_dream11_oam_provideraccount_v1_provider_account_proto_init() {
	if File_dream11_oam_provideraccount_v1_provider_account_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dream11_oam_provideraccount_v1_provider_account_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProviderAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dream11_oam_provideraccount_v1_provider_account_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProviderAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dream11_oam_provideraccount_v1_provider_account_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProviderAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dream11_oam_provideraccount_v1_provider_account_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProviderAccountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dream11_oam_provideraccount_v1_provider_account_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dream11_oam_provideraccount_v1_provider_account_proto_goTypes,
		DependencyIndexes: file_dream11_oam_provideraccount_v1_provider_account_proto_depIdxs,
		MessageInfos:      file_dream11_oam_provideraccount_v1_provider_account_proto_msgTypes,
	}.Build()
	File_dream11_oam_provideraccount_v1_provider_account_proto = out.File
	file_dream11_oam_provideraccount_v1_provider_account_proto_rawDesc = nil
	file_dream11_oam_provideraccount_v1_provider_account_proto_goTypes = nil
	file_dream11_oam_provideraccount_v1_provider_account_proto_depIdxs = nil
}
