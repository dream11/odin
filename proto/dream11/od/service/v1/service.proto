syntax = "proto3";
package dream11.od.service.v1;

import "dream11/od/dto/v1/service.proto";
import "google/protobuf/struct.proto";

option go_package = "github.com/dream11/odin/proto/gen/go/dream11/od/service/v1";

service ServiceService {
  rpc DeployService(DeployServiceRequest) returns (stream DeployServiceResponse) {}
  rpc ReleaseService(ReleaseServiceRequest) returns (stream ReleaseServiceResponse) {}
  rpc OperateService(OperateServiceRequest) returns (stream OperateServiceResponse) {}
  rpc UndeployService(UndeployServiceRequest) returns (stream UndeployServiceResponse) {}
  rpc DeployReleasedService(DeployReleasedServiceRequest) returns (stream DeployReleasedServiceResponse) {}

}

message DeployServiceRequest {
  string env_name = 1;
  dream11.od.dto.v1.ServiceDefinition service_definition = 2;
  dream11.od.dto.v1.ProvisioningConfig provisioning_config = 3;
}

message DeployServiceResponse {
  ServiceStatus service_status = 1;
  repeated ComponentStatus components_status = 2;
  string message = 3;
}

message UndeployServiceRequest {
  string env_name = 1;
  string service_name = 2;
}

message UndeployServiceResponse {
  ServiceStatus service_status = 1;
  repeated ComponentStatus components_status = 2;
  string message = 3;
}

message ServiceStatus {
  string service_status = 1;
  string service_action = 2;
  string error = 3;
}

message ComponentStatus {
  string component_name = 1;
  string component_status = 2;
  string component_action = 3;
  string error = 4;
}

message ReleaseServiceRequest {
  dream11.od.dto.v1.ServiceDefinition service_definition = 1;
  map<string, dream11.od.dto.v1.ProvisioningConfig> provisioning_configs = 2;
}

message ReleaseServiceResponse {
  string provisioning_type = 1;
  ServiceStatus service_status = 2;
  repeated ComponentStatus components_status = 3;
  string message = 4;
}

message OperateServiceRequest {
  string env_name = 1;
  string service_name = 2;
  repeated string component_name = 3;
  bool is_component_operation = 4;
  string operation = 5;
  google.protobuf.Struct config = 6;
}

message OperateServiceResponse {
  ServiceStatus service_status = 1;
  repeated ComponentStatus components_status = 2;
  string message = 3;
}

message DeployReleasedServiceResponse {
  ServiceStatus service_status = 1;
  repeated ComponentStatus components_status = 2;
  string message = 3;
}

message DeployReleasedServiceRequest {
  string service_definition_name = 1;
  string service_version = 2;
  string env_name = 3;
}