syntax = "proto3";
package dream11.od.service.v1;

import "dream11/od/dto/v1/service.proto";
import "google/protobuf/struct.proto";

option go_package = "github.com/dream11/odin/proto/gen/go/dream11/od/service/v1";

service ServiceService {
  rpc DeployService(DeployServiceRequest) returns (stream DeployServiceResponse) {}
  rpc ReleaseService(ReleaseServiceRequest) returns (stream ReleaseServiceResponse) {}
  rpc DeployReleasedService(DeployReleasedServiceRequest) returns (stream DeployReleasedServiceResponse) {}
  rpc DeployServiceSet(DeployServiceSetRequest) returns (stream DeployServiceSetResponse) {}
  rpc OperateService(OperateServiceRequest) returns (stream OperateServiceResponse) {}
  rpc UndeployService(UndeployServiceRequest) returns (stream UndeployServiceResponse) {}
  rpc ListService(ListServiceRequest) returns (ListServiceResponse) {}
  rpc DescribeService(DescribeServiceRequest) returns (DescribeServiceResponse) {}
  rpc OperateComponentDiff(OperateComponentDiffRequest) returns (OperateComponentDiffResponse) {}
  rpc GetConflictingServices(GetConflictingServicesRequest) returns (GetConflictingServicesResponse) {}
}

message DeployServiceRequest {
  string env_name = 1;
  dto.v1.ServiceDefinition service_definition = 2;
  dto.v1.ProvisioningConfig provisioning_config = 3;
}

message ServiceResponse {
  ServiceStatus service_status = 1;
  repeated ComponentStatus components_status = 2;
  string message = 3;
}

message DeployReleasedServiceResponse {
  ServiceResponse service_response = 1;
}

message ServiceIdentifier {
  string service_name = 1;
  string service_version = 2;
  string tags = 3;
  bool force_flag = 4;
}

message DeployReleasedServiceRequest {
  ServiceIdentifier service_identifier = 1;
  string env_name = 3;
}

message DeployServiceSetRequest {
  string env_name = 1;
  string name = 2;
  repeated ServiceIdentifier services = 3;
}

message DeployServiceSetResponse {
  repeated DeployServiceSetServiceResponse services = 1;
}

message DeployServiceSetServiceResponse {
  ServiceIdentifier service_identifier = 1;
  ServiceResponse service_response = 3;
}

message DeployServiceResponse {
  ServiceResponse service_response = 1;
}

message ServiceStatus {
  string service_status = 1;
  string service_action = 2;
  string error = 3;
}

message ComponentStatus {
  string component_name = 1;
  string component_status = 2;
  string component_action = 3;
  string error = 4;
}

message ReleaseServiceRequest {
  dto.v1.ServiceDefinition service_definition = 1;
  map<string, dto.v1.ProvisioningConfig> provisioning_configs = 2;
}

message ReleaseServiceResponse {
  string provisioning_type = 1;
  ServiceStatus service_status = 2;
  repeated ComponentStatus components_status = 3;
  string message = 4;
}

message OperateServiceRequest {
  string env_name = 1;
  string service_name = 2;
  string component_name = 3;
  bool is_component_operation = 4;
  string operation = 5;
  optional google.protobuf.Struct config = 6;
}

message OperateServiceResponse {
  ServiceResponse service_response = 1;
}

message UndeployServiceRequest {
  string env_name = 1;
  string service_name = 2;
}

message UndeployServiceResponse {
  ServiceResponse service_response = 1;
}

message ListServiceResponse {
  repeated dto.v1.ServiceMetadata services = 1;
}

message ListServiceRequest {
  string name = 1;
  string version = 2;
  string tags = 3;
}

message DescribeServiceRequest {
  string service_name = 1;
  string version = 2;
  map<string, string> params = 4;
}

message DescribeServiceResponse {
  dream11.od.dto.v1.Service service = 1;
}

message OperateComponentDiffRequest {
  string env_name = 1;
  string service_name = 2;
  string component_name = 3;
  string operation_name = 4;
  optional google.protobuf.Struct config = 5;
}

message OperateComponentDiffResponse {
  google.protobuf.Struct old_values = 1;
  google.protobuf.Struct new_values = 2;
}
message GetConflictingServicesRequest {
  string env_name = 1;
  string name = 2;
  repeated ServiceIdentifier services = 3;
}

message GetConflictingServicesResponse {
  repeated dto.v1.ServiceVersionComparisonMetadata services = 1;
}
