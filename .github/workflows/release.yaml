name: odin-release
on:
  pull_request:
    types: [closed]
jobs:
  release:
    name: odin-release
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'development'
    runs-on: [self-hosted, linux, X64, devops]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - id: changed_files
        uses: jitterbit/get-changed-files@v1
      - name: Check commit details
        id: commit
        run: |
          echo "::set-output name=version::$(go run cmd/getVersion.go)\n"
          echo "::set-output name=changelog::$(git log --pretty='- %s')\n"
      - name: Create Tag
        uses: negz/create-tag@v1
        with:
          version: ${{ steps.commit.outputs.version }}
          message: ${{ steps.commit.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate changelog
        run: |
          [ -e CHANGELOG.md ] && rm CHANGELOG.md
          cat <<EOT >> CHANGELOG.md
          # [${{ steps.commit.outputs.version }}](https://github.com/dream11/odin/tree/${{ steps.commit.outputs.version }})
          ## Changes
          ### Files
          ${{ steps.changed_files.outputs.all }}
          ### Commits
          ${{ steps.commit.outputs.changelog }}
          EOT
      - name: Commit files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "Add changelog" -a
      - name: Push Changelog
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.GITHUB_BASE_REF }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.commit.outputs.version }}
          release_name: Release ${{ steps.commit.outputs.version }}
          draft: false
          prerelease: false
      - name: Create Release Asset
        run: |
          make build
      - name: Upload Release Asset (darwin)
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/odin_darwin_amd64
          asset_name: odin_darwin_amd64
          asset_content_type: application/zip